//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "login.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
 #include <drogon/utils/OStringStream.h> 
using namespace drogon;
std::string login::genText(const DrTemplateData& login_view_data)
{
	drogon::OStringStream login_tmp_stream;
	std::string layoutName{""};
	login_tmp_stream << "<html>\n";
	login_tmp_stream << "<head>\n";
	login_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	login_tmp_stream << "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
	login_tmp_stream << "    <title>Login</title>\n";
	login_tmp_stream << "    <link rel=\"stylesheet\" href=\"/css/login.css\" media=\"all\"/>\n";
	login_tmp_stream << "</head>\n";
	login_tmp_stream << "<body>\n";
	login_tmp_stream << "    <div class=\"container\">\n";
	login_tmp_stream << "        <form class=\"login-form\">\n";
	login_tmp_stream << "            <h2>";
{
    auto & val=login_view_data["title"];
    if(val.type()==typeid(const char *)){
        login_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        login_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
	login_tmp_stream << "</h2>\n";
	login_tmp_stream << "            <div class=\"form-group\">\n";
	login_tmp_stream << "                <input type=\"text\" name=\"username\" placeholder=\"Username\" required>\n";
	login_tmp_stream << "            </div>\n";
	login_tmp_stream << "            <div class=\"form-group\">\n";
	login_tmp_stream << "                <input type=\"password\" name=\"password\" placeholder=\"Password\" required>\n";
	login_tmp_stream << "            </div>\n";
	login_tmp_stream << "            <button type=\"submit\">Login</button>\n";
	login_tmp_stream << "            <p class=\"register-link\">Don't have an account? <a href=\"/register\">Register</a></p>\n";
	login_tmp_stream << "        </form>\n";
	login_tmp_stream << "    </div>\n";
	login_tmp_stream << "</body>\n";
	login_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(login_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = login_view_data;
auto str = std::move(login_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
